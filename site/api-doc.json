{
  "openapi": "3.0.3",
  "info": {
    "title": "Tauri Static Server API",
    "description": "API exposée par l'application Axum/Tauri (gestion d'embed, configuration, fichiers, exécution de processus, explorateur, serveurs enfants).\n\n**Note** : certaines routes utilisent POST même pour des lectures (ex. `/api/file/{file}`) par conception côté serveur.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:{port}",
      "variables": {
        "port": { "default": "8080", "description": "Port local du serveur" }
      }
    }
  ],
  "tags": [
    { "name": "Embed" },
    { "name": "Config" },
    { "name": "Files" },
    { "name": "Run" },
    { "name": "Explorer" },
    { "name": "Servers" },
    { "name": "Admin" }
  ],
  "paths": {
    "/api/embed": {
      "post": {
        "tags": ["Embed"],
        "summary": "Empaqueter deux dossiers dans un exécutable",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmbedReqAny" },
              "example": {
                "code": "C:/projets/monapp/code",
                "executable": "C:/projets/monapp/executable",
                "output": "C:/projets/monapp/MonApp.exe"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Succès", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmbedResp" } } } },
          "400": { "description": "Requête invalide", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmbedResp" } } } },
          "500": { "description": "Erreur interne", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmbedResp" } } } }
        }
      }
    },
    "/api/useConfig": {
      "post": {
        "tags": ["Config"],
        "summary": "Changer les dossiers racines (code & executable)",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UseConfigReq" } } } },
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UseConfigResp" } } } }, "400": { "description": "Dossiers invalides", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UseConfigResp" } } } } }
      }
    },
    "/api/get-config": {
      "post": {
        "tags": ["Config"],
        "summary": "Obtenir la configuration courante",
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetConfigResp" } } } } }
      }
    },
    "/api/current-directory": {
      "post": {
        "tags": ["Files"],
        "summary": "Définir la base des opérations de fichiers",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CurrentDirReq" } } } },
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CurrentDirResp" } } } },
          "400": { "description": "Pas un dossier", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CurrentDirResp" } } } },
          "404": { "description": "Introuvable", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CurrentDirResp" } } } }
        }
      }
    },
    "/api/file/{file}": {
      "post": {
        "tags": ["Files"],
        "summary": "Lire ou écrire un fichier relatif à la base courante",
        "parameters": [
          { "name": "file", "in": "path", "required": true, "schema": { "type": "string" }, "description": "Chemin relatif (peut contenir des sous-dossiers)" }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/octet-stream": { "schema": { "type": "string", "format": "binary", "description": "Si le body est non vide ⇒ écriture brute du fichier. Si body vide ⇒ lecture." } },
            "text/plain; charset=utf-8": { "schema": { "type": "string", "description": "Écriture texte (UTF-8 exigé). Body vide ⇒ lecture." } }
          }
        },
        "responses": {
          "200": {
            "description": "Lecture réussie (retourne le contenu du fichier) OU écriture réussie (retour JSON)",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FileWriteResp" } },
              "application/octet-stream": { "schema": { "type": "string", "format": "binary" } },
              "text/plain": { "schema": { "type": "string" } }
            }
          },
          "400": { "description": "Chemin invalide / encodage texte invalide", "content": { "text/plain": { "schema": { "type": "string" } } } },
          "404": { "description": "Fichier introuvable (lecture)", "content": { "text/plain": { "schema": { "type": "string" } } } },
          "500": { "description": "Erreur serveur", "content": { "text/plain": { "schema": { "type": "string" } } } }
        }
      }
    },
    "/api/run": {
      "post": {
        "tags": ["Run"],
        "summary": "Lancer un exécutable (dans exec_root)",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RunReq" }, "examples": { "list": { "value": { "executableName": "monoutil", "arguments": ["--help"] } }, "line": { "value": { "executableName": "monoutil", "arguments": "-o \"C:/tmp/a b\" --flag" } } } } } },
        "responses": { "200": { "description": "Processus lancé", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RunResp" } } } }, "404": { "description": "Exécutable introuvable", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RunResp" } } } }, "500": { "description": "Erreur de lancement", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RunResp" } } } } }
      }
    },
    "/api/run/status": {
      "post": {
        "tags": ["Run"],
        "summary": "Statut d'un processus lancé",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcIdReq" } } } },
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcStatusResp" } } } }, "404": { "description": "id inconnu", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcStatusResp" } } } }, "500": { "description": "Erreur interne", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcStatusResp" } } } } }
      }
    },
    "/api/run/stop": {
      "post": {
        "tags": ["Run"],
        "summary": "Tuer un processus lancé",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcIdReq" } } } },
        "responses": { "200": { "description": "Tué ou déjà terminé", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcStopResp" } } } }, "404": { "description": "id inconnu", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcStopResp" } } } }, "500": { "description": "Échec kill", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProcStopResp" } } } } }
      }
    },
    "/api/run/stopAll": {
      "post": {
        "tags": ["Run"],
        "summary": "Tuer tous les processus lancés",
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopAllResp" } } } } }
      }
    },
    "/api/explorer": {
      "post": {
        "tags": ["Explorer"],
        "summary": "Explorer un chemin (fichier ou dossier)",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExplorerReq" }, "example": { "path": "C:/Users" } } } },
        "responses": {
          "200": {
            "description": "Retourne soit un fichier soit un répertoire",
            "content": { "application/json": { "schema": { "oneOf": [ { "$ref": "#/components/schemas/ExplorerFile" }, { "$ref": "#/components/schemas/ExplorerDirectory" } ] } } }
          },
          "404": { "description": "Introuvable", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExplorerError" } } } },
          "500": { "description": "Erreur de lecture répertoire", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExplorerError" } } } }
        }
      }
    },
    "/api/newServer": {
      "post": {
        "tags": ["Servers"],
        "summary": "Lancer un serveur enfant sur 127.0.0.1",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NewServerReq" } } } },
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NewServerResp" } } } }, "400": { "description": "Paramètres invalides", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NewServerResp" } } } }, "500": { "description": "Échec démarrage", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NewServerResp" } } } } }
      }
    },
    "/api/stop": {
      "post": {
        "tags": ["Servers"],
        "summary": "Arrêter un serveur (enfant ou courant)",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopServerReq" }, "examples": { "stopChild": { "value": { "port": 52341 } }, "stopSelf": { "value": { } } } } } },
        "responses": { "200": { "description": "OK / déjà en arrêt", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopServerResp" } } } }, "404": { "description": "Serveur inconnu", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopServerResp" } } } }, "400": { "description": "Requête invalide (pas de port sur un parent)", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopServerResp" } } } } }
      }
    }
  },
  "components": {
    "schemas": {
      "EmbedReqAny": {
        "type": "object",
        "required": ["output"],
        "properties": {
          "code": { "type": "string", "nullable": true, "description": "Dossier code à empaqueter (obligatoire côté serveur)" },
          "executable": { "type": "string", "nullable": true, "description": "Dossier binaire à empaqueter" },
          "output": { "type": "string", "description": "Chemin du nouvel exécutable" }
        }
      },
      "EmbedResp": {
        "type": "object",
        "properties": {
          "ok": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "required": ["ok", "message"]
      },
      "UseConfigReq": { "type": "object", "required": ["code", "executable"], "properties": { "code": { "type": "string" }, "executable": { "type": "string" } } },
      "UseConfigResp": { "type": "object", "required": ["ok", "message"], "properties": { "ok": { "type": "boolean" }, "message": { "type": "string" } } },
      "GetConfigResp": { "type": "object", "required": ["ok", "code", "executable", "fileBase"], "properties": { "ok": { "type": "boolean" }, "code": { "type": "string" }, "executable": { "type": "string" }, "fileBase": { "type": "string" } } },
      "CurrentDirReq": { "type": "object", "required": ["path"], "properties": { "path": { "type": "string", "description": "Chemin absolu ou relatif. Vide ⇒ CWD." } } },
      "CurrentDirResp": { "type": "object", "required": ["ok", "message", "current"], "properties": { "ok": { "type": "boolean" }, "message": { "type": "string" }, "current": { "type": "string" } } },
      "FileWriteResp": { "type": "object", "required": ["ok", "message", "path"], "properties": { "ok": { "type": "boolean" }, "message": { "type": "string" }, "path": { "type": "string" } } },
      "RunReq": { "type": "object", "required": ["executableName"], "properties": { "executableName": { "type": "string" }, "arguments": { "oneOf": [ { "type": "array", "items": { "type": "string" } }, { "type": "string" } ] } } },
      "RunResp": { "type": "object", "required": ["ok", "message"], "properties": { "ok": { "type": "boolean" }, "status": { "type": "integer", "format": "int32", "nullable": true }, "message": { "type": "string" }, "stdout": { "type": "string" }, "stderr": { "type": "string" }, "id": { "type": "integer", "format": "int64", "nullable": true }, "pid": { "type": "integer", "format": "int32", "nullable": true } } },
      "ProcIdReq": { "type": "object", "required": ["id"], "properties": { "id": { "type": "integer", "format": "int64" } } },
      "ProcStatusResp": { "type": "object", "required": ["ok", "running", "message", "stdout", "stderr"], "properties": { "ok": { "type": "boolean" }, "running": { "type": "boolean" }, "status": { "type": "integer", "format": "int32", "nullable": true }, "pid": { "type": "integer", "format": "int32", "nullable": true }, "stdout": { "type": "string" }, "stderr": { "type": "string" }, "message": { "type": "string" } } },
      "ProcStopResp": { "type": "object", "required": ["ok", "message"], "properties": { "ok": { "type": "boolean" }, "message": { "type": "string" } } },
      "StopAllResp": { "type": "object", "required": ["ok", "message"], "properties": { "ok": { "type": "boolean" }, "message": { "type": "string" } } },
      "ExplorerReq": { "type": "object", "required": ["path"], "properties": { "path": { "type": "string" } } },
      "ExplorerElement": { "type": "object", "required": ["name", "path"], "properties": { "name": { "type": "string" }, "path": { "type": "string" } } },
      "ExplorerFile": { "type": "object", "required": ["type", "path", "name"], "properties": { "type": { "type": "string", "enum": ["file"] }, "path": { "type": "string" }, "name": { "type": "string" }, "parent": { "type": "string", "nullable": true } } },
      "ExplorerDirectory": { "type": "object", "required": ["type", "path", "content"], "properties": { "type": { "type": "string", "enum": ["directory"] }, "path": { "type": "string" }, "parent": { "type": "string", "nullable": true }, "content": { "type": "array", "items": { "$ref": "#/components/schemas/ExplorerElement" } } } },
      "ExplorerError": { "type": "object", "required": ["type", "message"], "properties": { "type": { "type": "string", "enum": ["error"] }, "message": { "type": "string" } } },
      "NewServerReq": { "type": "object", "required": ["code", "executable"], "properties": { "code": { "type": "string" }, "executable": { "type": "string" }, "port": { "type": "integer", "format": "int32", "minimum": 0, "maximum": 65535, "nullable": true } } },
      "NewServerResp": { "type": "object", "required": ["ok", "message"], "properties": { "ok": { "type": "boolean" }, "port": { "type": "integer", "format": "int32", "nullable": true }, "message": { "type": "string" } } },
      "StopServerReq": { "type": "object", "properties": { "port": { "type": "integer", "format": "int32", "nullable": true } } },
      "StopServerResp": { "type": "object", "required": ["ok", "message"], "properties": { "ok": { "type": "boolean" }, "port": { "type": "integer", "format": "int32", "nullable": true }, "message": { "type": "string" } } }
    }
  }
}