name: Build Windows EXE (unsigned) + ZIP

on:
  push: { branches: [main] }
  workflow_dispatch:

permissions: { contents: write }

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with: { workspaces: "src-tauri -> target" }
      - uses: mozilla-actions/sccache-action@v0.0.7
      - name: Enable sccache
        shell: pwsh
        run: |
          "RUSTC_WRAPPER=sccache" | Out-File -Append $env:GITHUB_ENV
          "SCCACHE_CACHE_SIZE=2G"  | Out-File -Append $env:GITHUB_ENV
      - name: Install Tauri CLI
        run: cargo install tauri-cli --locked --version ^1.6
      - name: Stage web assets
        shell: pwsh
        run: |
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          New-Item -ItemType Directory -Force dist | Out-Null
          Copy-Item src-tauri\assets\* dist -Recurse -Force
          if (-not (Test-Path dist\index.html)) { Write-Error "index.html missing in staged dist" }
      - run: cargo tauri icon src-tauri/icon.png

      - name: Build portable EXE
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_BUNDLE_TARGETS: app
        with:
          bundles: app
          args: --config src-tauri/tauri.ci.json

      - name: Pack ZIP + SHA256
        id: prep
        shell: pwsh
        run: |
          $exe = Get-ChildItem src-tauri/target/release -Filter TauriKargo*.exe -Recurse | Select-Object -First 1
          if (-not $exe) { Write-Error "No EXE found after build." }
          $toml = Get-Content src-tauri\Cargo.toml -Raw
          if ($toml -match '(?m)^\s*version\s*=\s*"([^"]+)"') { $v = $Matches[1] } else { $v = "0.0.0" }
          $zip = "TauriKargo-$v-windows-x64-UNSIGNED.zip"
          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path $exe.FullName -DestinationPath $zip
          $sha256 = (Get-FileHash $zip -Algorithm SHA256).Hash
          "zip=$zip" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "exe=$($exe.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "version=$v" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "sha256=$sha256" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Upload artifact (for signing job)
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows-exe
          path: |
            ${{ steps.prep.outputs.exe }}
            ${{ steps.prep.outputs.zip }}

      - name: Create/Update pre-release (unsigned assets)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.prep.outputs.version }}-unsigned
          name: "TauriKargo v${{ steps.prep.outputs.version }} (unsigned preview)"
          prerelease: true
          make_latest: false
          draft: false
          files: |
            ${{ steps.prep.outputs.zip }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
